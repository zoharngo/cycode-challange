{"version":3,"sources":["components/TabsContainer/TabPanel/TabPanel.jsx","store/UserOrganizationsContext/UserOrganizationsContext.js","pages/Home/Home.jsx","pages/Register/Register.jsx","components/TabsContainer/TabsContainer.jsx","components/Modal/Modal.jsx","components/Modal/Layouts/GridLayout.js","components/MultiSelect/MultiSelect.jsx","components/RadioSelect/RadioSelect.jsx","components/Button/Button.jsx","components/CustomTextField/CustomTextField.jsx","hooks/useLocalStorage.js","App.js","index.js"],"names":["TabPanel","props","children","index","other","Box","component","role","id","sx","minHeight","p","UserOrganizationsContext","createContext","userOrganizations","users","organizations","showModal","selectedUsers","selectedOrganization","pushUserToSelectedList","setShowModal","Home","history","useHistory","useContext","selectedUsersObjects","useMemo","filter","user","includes","selectedOrganizationObject","find","org","Typography","variant","gutterBottom","name","length","List","map","ListItem","ListItemText","firstName","lastName","onClick","push","label","Register","width","position","top","left","transform","a11yProps","key","TabsContainer","routeMatch","useRouteMatch","currentTab","path","borderBottom","borderColor","Tabs","value","Tab","to","Link","style","maxWidth","bgcolor","border","boxShadow","Modal","containerRef","open","onClose","Slide","container","direction","in","mountOnEnter","unmountOnExit","Item","styled","Paper","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","Gridlayout","Grid","React","child","item","xs","md","MultipleSelect","items","selectd","displayFields","onSelect","useState","checked","setChecked","elements","setElements","toggleOpen","useEffect","onTextFieldChange","useCallback","e","displayText","forEach","field","toLowerCase","startsWith","target","ClickAwayListener","onClickAway","label2","onArrowDropClick","prev","onChange","height","itemSize","itemCount","overscanCount","labelId","disablePadding","ListItemButton","undefined","currentIndex","indexOf","newChecked","splice","dense","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","inputProps","primary","StyledList","overflowY","RadioSelect","selectedValue","setSelectedValue","handleChange","selectedValueName","selectedElement","elem","Boolean","console","log","display","Radio","Button","enabled","disabled","CustomTextField","_open","Fragment","InputLabel","htmlFor","TextField","InputProps","endAdornment","InputAdornment","cursor","startAdornment","m","minWidth","size","defaultProps","returnInitialState","storageKey","initialValue","window","localStorage","getItem","JSON","parse","error","useLocalStorage","storedValue","setStoredValue","setValue","valueToStore","Function","setItem","stringify","App","userOrganizationsData","updateSelectedUsers","updateSelectedOrganization","useRef","selectedOrganizationUsers","organizationId","submitEnabled","ref","CssBaseline","Provider","current","GridLayout","replace","bottom","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.d5b2a9db.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\n\nexport default function TabPanel(props) {\n  const { children, index, ...other } = props;\n\n  return (\n    <Box component='div' role='tabpanel' id={`tabpanel-${index}`} aria-labelledby={`tab-${index}`} {...other}>\n      <Box sx={{ minHeight: '100%', p: 3 }}>{children} </Box>\n    </Box>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number,\n  other: PropTypes.any,\n};\n","import { createContext } from 'react';\n\nconst UserOrganizationsContext = createContext({\n  userOrganizations: {\n    users: [],\n    organizations: [],\n  },\n  showModal: false,\n  selectedUsers: [],\n  selectedOrganization: '',\n  pushUserToSelectedList: () => {},\n  setShowModal: () => {},\n});\n\nexport default UserOrganizationsContext;\n","import React, { useContext, useMemo } from 'react';\nimport Box from '@mui/material/Box';\nimport { List, ListItem, ListItemText, Typography } from '@mui/material';\nimport { Button } from '../../components';\nimport { useHistory } from 'react-router-dom';\nimport { UserOrganizationsContext } from '../../store';\n\nexport default function Home() {\n  const history = useHistory();\n  const { userOrganizations, selectedUsers, selectedOrganization } = useContext(UserOrganizationsContext);\n\n  const selectedUsersObjects = useMemo(() => {\n    return userOrganizations.users.filter((user) => selectedUsers.includes(user.id));\n  }, [userOrganizations, selectedUsers]);\n\n  const selectedOrganizationObject = useMemo(() => {\n    return userOrganizations.organizations.find((org) => org.id === selectedOrganization);\n  }, [userOrganizations.organizations, selectedOrganization]);\n\n  return (\n    <>\n      <Box component='header'>\n        {!!selectedOrganization ? (\n          <Typography variant='h2' component='h2' gutterBottom>\n            Selected organization {selectedOrganizationObject.name}\n          </Typography>\n        ) : (\n          <Typography variant='h2' component='h2' gutterBottom>\n            Wellcome Page\n          </Typography>\n        )}\n        {selectedUsers.length > 0 ? (\n          <List>\n            {selectedUsersObjects.map((user, index) => {\n              return (\n                <ListItem key={index}>\n                  <ListItemText>\n                    <Typography variant='subtitle1'>\n                      {`${user.firstName} ${user.lastName} `}\n                      <strong>Subscribed!</strong>\n                    </Typography>\n                  </ListItemText>\n                </ListItem>\n              );\n            })}\n          </List>\n        ) : (\n          <Typography variant='p' component='p' gutterBottom>\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam sunt sequi deserunt distinctio reiciendis!\n            Repudiandae necessitatibus veniam ad pariatur autem.\n          </Typography>\n        )}\n      </Box>\n      <Box component='main'>\n        <Button onClick={() => history.push('/register')} label='Register' />\n      </Box>\n    </>\n  );\n}\n","import { useContext } from 'react';\nimport Box from '@mui/material/Box';\nimport { UserOrganizationsContext } from '../../store';\nimport { Button } from '../../components';\n\nexport default function Register() {\n  const { setShowModal } = useContext(UserOrganizationsContext);\n\n  return (\n    <Box component='div' sx={{ width: '100%' }}>\n      <Button\n        sx={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%,-50%)' }}\n        onClick={() => setShowModal(true)}\n        label='Subscribe'\n      />\n    </Box>\n  );\n}\n","import * as React from 'react';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\nimport TabPanel from './TabPanel/TabPanel';\r\nimport { Home, Register } from '../../pages';\r\nimport { Route, Switch } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    key: `tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function TabsContainer() {\r\n  const routeMatch = useRouteMatch(['/register', '/']);\r\n  const currentTab = routeMatch?.path;\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n        <Tabs value={currentTab} aria-label='tab-nav-bar'>\r\n          <Tab label='Home' {...a11yProps(0)} value='/' to='/' component={Link} />\r\n          <Tab label='Register' {...a11yProps(1)} value='/register' to='/register' component={Link} />\r\n        </Tabs>\r\n      </Box>\r\n      <Switch>\r\n        <Route path='/register'>\r\n          <TabPanel index={1}>\r\n            <Register />\r\n          </TabPanel>\r\n        </Route>\r\n        <Route path='/*'>\r\n          <TabPanel index={0}>\r\n            <Home />\r\n          </TabPanel>\r\n        </Route>\r\n      </Switch>\r\n    </Box>\r\n  );\r\n}\r\n","import { useContext } from 'react';\nimport Box from '@mui/material/Box';\nimport { default as CoreModal } from '@mui/material/Modal';\nimport { UserOrganizationsContext } from '../../store';\nimport PropTypes from 'prop-types';\nimport { Slide } from '@mui/material';\n\nconst style = {\n  position: 'relative',\n  top: '25%',\n  left: '25%',\n  maxWidth: '50%',\n  minHeight: '50%',\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\nexport default function Modal(props) {\n  const { children, containerRef, ...other } = props;\n\n  const { showModal, setShowModal } = useContext(UserOrganizationsContext);\n\n  return (\n    <CoreModal\n      open={showModal}\n      onClose={() => setShowModal(false)}\n      aria-labelledby='modal-modal-title'\n      aria-describedby='modal-modal-description'\n      {...other}\n    >\n      <Slide container={containerRef} direction='up' in={showModal} mountOnEnter unmountOnExit>\n        <Box sx={style}>{children}</Box>\n      </Slide>\n    </CoreModal>\n  );\n}\n\nModal.propTypes = {\n  children: PropTypes.node,\n  containerRef: PropTypes.object,\n  other: PropTypes.any,\n};\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport PropTypes from 'prop-types';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nconst Gridlayout = (props) => {\n  const { children } = props;\n\n  return (\n    <Grid container spacing={2}>\n      {React.Children.map(children, (child) => {\n        return (\n          <Grid item xs={12} md>\n            <Item>{child}</Item>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nGridlayout.propTypes = {\n  children: PropTypes.node,\n};\nexport default Gridlayout;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Checkbox from '@mui/material/Checkbox';\nimport { FixedSizeList } from 'react-window';\nimport PropTypes from 'prop-types';\nimport { CustomTextField } from '..';\nimport { Box } from '@mui/system';\nimport { ClickAwayListener } from '@mui/material';\n\nexport default function MultipleSelect({\n  items = [],\n  selectd = [],\n  displayFields = [],\n  onSelect = () => {},\n  key = 'id',\n  label = '',\n}) {\n  const [checked, setChecked] = useState(selectd);\n  const [elements, setElements] = useState(items);\n  const [open, toggleOpen] = useState(false);\n\n  useEffect(() => {\n    setElements(items);\n  }, [items]);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n    onSelect(newChecked);\n    toggleOpen(true);\n  };\n\n  const onTextFieldChange = useCallback(\n    (e) => {\n      toggleOpen(true);\n      setElements(\n        items.filter((item) => {\n          let displayText = '';\n          displayFields.forEach((field) => {\n            displayText += item[field] + ' ';\n          });\n          return displayText.toLowerCase().startsWith(e.target?.value.toLowerCase());\n        })\n      );\n    },\n    [displayFields, items]\n  );\n  function renderRow(props) {\n    const { index, style } = props;\n    const item = elements[index];\n    const labelId = `checkbox-list-label-${item[key]}`;\n    let displayText = '';\n    displayFields.forEach((field) => {\n      displayText += item[field] + ' ';\n    });\n    return (\n      <ListItem style={style} key={index} disablePadding>\n        <ListItemButton role={undefined} onClick={handleToggle(item[key])} dense>\n          <ListItemIcon>\n            <Checkbox\n              edge='start'\n              checked={checked.indexOf(item[key]) !== -1}\n              tabIndex={-1}\n              disableRipple\n              inputProps={{ 'aria-labelledby': labelId }}\n            />\n          </ListItemIcon>\n          <ListItemText id={labelId} primary={displayText} />\n        </ListItemButton>\n      </ListItem>\n    );\n  }\n\n  return (\n    <ClickAwayListener onClickAway={() => toggleOpen(false)}>\n      <Box>\n        <CustomTextField\n          label2={label}\n          label={`${checked.length} selected`}\n          name='user-search-bar'\n          open={open}\n          onArrowDropClick={() => toggleOpen((prev) => !prev)}\n          onChange={onTextFieldChange}\n        />\n        <FixedSizeList height={open ? 145 : 0} width='100%' itemSize={46} itemCount={elements.length} overscanCount={5}>\n          {renderRow}\n        </FixedSizeList>\n      </Box>\n    </ClickAwayListener>\n  );\n}\n\nMultipleSelect.propTypes = {\n  items: PropTypes.array.isRequired,\n  selectd: PropTypes.array.isRequired,\n  displayFields: PropTypes.array.isRequired,\n  label: PropTypes.string,\n  key: PropTypes.string,\n  onSelect: PropTypes.func,\n};\n","import React, { useState, useCallback, useMemo } from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport PropTypes from 'prop-types';\nimport { ClickAwayListener, Radio } from '@mui/material';\nimport { CustomTextField } from '..';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\n\nconst StyledList = styled(List)(({ theme }) => ({\n  ...theme.typography.body2,\n  height: '145px',\n  overflowY: 'scroll',\n  width: '100%',\n  maxWidth: 360,\n  bgcolor: 'background.paper',\n}));\n\nexport default function RadioSelect({\n  items = [],\n  displayFields = [],\n  onSelect = () => {},\n  selectd = '',\n  key = 'id',\n  label = '',\n}) {\n  const [selectedValue, setSelectedValue] = useState(selectd);\n  const [open, toggleOpen] = useState(false);\n  const [elements, setElements] = useState(items);\n\n  const handleChange = (value) => () => {\n    setSelectedValue(value);\n    onSelect(value);\n    toggleOpen(false);\n  };\n\n  const selectedValueName = useMemo(() => {\n    let displayText = '';\n    const selectedElement = items.find((elem) => elem.id === selectedValue);\n    if (selectedElement) {\n      displayFields.forEach((field) => {\n        displayText += selectedElement[field] + ' ';\n      });\n    }\n    if (Boolean(displayText)) {\n      return `${displayText} selected`;\n    }\n    return 'select organization:';\n  }, [displayFields, items, selectedValue]);\n\n  const onTextFieldChange = useCallback(\n    (e) => {\n      toggleOpen(true);\n      setElements(\n        items.filter((item) => {\n          let displayText = '';\n          displayFields.forEach((field) => {\n            displayText += item[field] + ' ';\n          });\n          return displayText.toLowerCase().startsWith(e.target?.value.toLowerCase());\n        })\n      );\n    },\n    [displayFields, items]\n  );\n  console.log(selectedValueName);\n  return (\n    <ClickAwayListener onClickAway={() => toggleOpen(false)}>\n      <Box>\n        <CustomTextField\n          label2={label}\n          label={selectedValueName}\n          name='org-search-bar'\n          open={open}\n          onClickAway={() => toggleOpen(false)}\n          onArrowDropClick={() => toggleOpen((prev) => !prev)}\n          onChange={onTextFieldChange}\n        />\n        <StyledList\n          id='org-radio-list'\n          sx={{\n            display: `${open ? 'inline-block' : 'none'}`,\n          }}\n        >\n          {elements.map((item, index) => {\n            const labelId = `radio-list-label-${item[key]}`;\n            let displayText = '';\n            displayFields.forEach((field) => {\n              displayText += item[field] + ' ';\n            });\n            return (\n              <ListItem key={index} disablePadding>\n                <ListItemButton role={undefined} onClick={handleChange(item[key])} dense>\n                  <ListItemIcon>\n                    <Radio\n                      checked={selectedValue === item[key]}\n                      onChange={handleChange}\n                      value={item[key]}\n                      name='radio-buttons'\n                      inputProps={{\n                        'aria-label': displayText,\n                      }}\n                    />\n                  </ListItemIcon>\n                  <ListItemText id={labelId} primary={displayText} />\n                </ListItemButton>\n              </ListItem>\n            );\n          })}\n        </StyledList>\n      </Box>\n    </ClickAwayListener>\n  );\n}\n\nRadioSelect.propTypes = {\n  items: PropTypes.array.isRequired,\n  selectd: PropTypes.string.isRequired,\n  displayFields: PropTypes.array.isRequired,\n  label: PropTypes.string,\n  key: PropTypes.string,\n  onSelect: PropTypes.func,\n};\n","import React from 'react';\nimport { Button as CoreButton, Typography } from '@mui/material';\nimport PropTypes from 'prop-types';\n\nexport default function Button({ onClick = () => {}, label = '', enabled = true, ...other }) {\n  return (\n    <CoreButton disabled={!enabled} {...other} variant='contained' onClick={onClick}>\n      <Typography variant='button' component='span'>\n        {label}\n      </Typography>\n    </CoreButton>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n  label: PropTypes.string,\n  enabled: PropTypes.bool,\n  other: PropTypes.any,\n};\n","import React, { useState, useEffect } from 'react';\nimport SearchIcon from '@mui/icons-material/Search';\nimport PropTypes from 'prop-types';\nimport { InputLabel, TextField, Typography } from '@mui/material';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\n\nconst CustomTextField = ({ name, label, label2, onChange, onArrowDropClick, open }) => {\n  const [_open, toggleOpen] = useState(false);\n\n  useEffect(() => {\n    toggleOpen(open);\n  }, [open]);\n\n  return (\n    <React.Fragment>\n      <InputLabel htmlFor={name}>\n        <Typography component='label' variant='caption'>{label}</Typography>\n      </InputLabel>\n      <TextField\n        InputProps={{\n          endAdornment: (\n            <InputAdornment\n              onClick={() => {\n                toggleOpen((prev) => !prev);\n                onArrowDropClick();\n              }}\n              sx={{ cursor: 'pointer' }}\n              position='end'\n            >\n              {!_open ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}\n            </InputAdornment>\n          ),\n          startAdornment: (\n            <InputAdornment position='start'>\n              <SearchIcon />\n            </InputAdornment>\n          ),\n        }}\n        sx={{ m: 1, minWidth: '90%' }}\n        label={label2}\n        name={name}\n        size='small'\n        onChange={onChange}\n      />\n    </React.Fragment>\n  );\n};\nCustomTextField.propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n  label2: PropTypes.string,\n  onChange: PropTypes.func,\n  onArrowDropClick: PropTypes.func,\n  open: PropTypes.bool,\n};\nCustomTextField.defaultProps = {\n  onChange: () => {},\n  onArrowDropClick: () => {},\n  open: false,\n};\n\nexport default CustomTextField;\n","import { useState } from 'react';\n\nfunction returnInitialState(storageKey, initialValue) {\n  try {\n    // Get from local storage by key\n    const item = window.localStorage.getItem(storageKey);\n    // Parse stored json or if none return an empty object\n    return item ? JSON.parse(item) : initialValue;\n  } catch (error) {\n    // If error also return an empty object\n    console.log(error);\n    return {};\n  }\n}\n\nexport default function useLocalStorage(storageKey, initialValue = {}) {\n  const [storedValue, setStoredValue] = useState(returnInitialState(storageKey, initialValue));\n\n  const setValue = (value) => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      window.localStorage.setItem(storageKey, JSON.stringify(valueToStore));\n      setStoredValue(valueToStore);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return [storedValue, setValue];\n}\n","import { useState, useMemo, useRef } from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { Button, GridLayout, Modal, MultipleSelect, RadioSelect, Tabs } from './components';\nimport userOrganizationsData from './userOrg.json';\nimport { UserOrganizationsContext } from './store';\nimport Box from '@mui/material/Box';\nimport { useHistory } from 'react-router-dom';\nimport useLocalStorage from './hooks/useLocalStorage';\n\nexport default function App() {\n  const [userOrganizations] = useState(userOrganizationsData);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedUsers, updateSelectedUsers] = useLocalStorage('selectedUsers', []);\n  const [selectedOrganization, updateSelectedOrganization] = useLocalStorage('selectedOrganization', '');\n  const containerRef = useRef(null);\n  const history = useHistory();\n\n  const selectedOrganizationUsers = useMemo(() => {\n    const selectedOrganizationUsers = userOrganizations.users.filter((user) => {\n      return user.organizationId === selectedOrganization;\n    });\n\n    return selectedOrganizationUsers.length > 0 ? selectedOrganizationUsers : userOrganizations.users;\n  }, [selectedOrganization, userOrganizations.users]);\n\n  const submitEnabled = useMemo(() => {\n    return !!selectedOrganization && selectedUsers.length > 0;\n  }, [selectedOrganization, selectedUsers.length]);\n\n  const onSubmit = () => {\n    history.replace('/');\n    setShowModal(false);\n  };\n\n  return (\n    <Box sx={{ width: '100vw', minHeight: '100vh' }} ref={containerRef}>\n      <CssBaseline />\n      <UserOrganizationsContext.Provider\n        value={{\n          userOrganizations,\n          selectedUsers,\n          selectedOrganization,\n          showModal,\n          setShowModal,\n        }}\n      >\n        <Tabs />\n        <Modal container={containerRef.current}>\n          <GridLayout>\n            <RadioSelect\n              label='Organization'\n              displayFields={['name']}\n              onSelect={updateSelectedOrganization}\n              items={userOrganizations.organizations}\n              selectd={selectedOrganization}\n            />\n            <MultipleSelect\n              label='Users'\n              displayFields={['firstName', 'lastName']}\n              onSelect={updateSelectedUsers}\n              items={selectedOrganizationUsers}\n              selectd={selectedUsers}\n            />\n          </GridLayout>\n          <Button onClick={onSubmit} enabled={submitEnabled} sx={{ position: 'absolute', bottom: 15 }} label='Submit' />\n        </Modal>\n      </UserOrganizationsContext.Provider>\n    </Box>\n  );\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router basename='/cycode-challange'>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}